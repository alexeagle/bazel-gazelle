syntax = "proto3";

message Config {
    string repo_root = 1;
    string repo_name = 2;
    string read_build_files_dir = 3;
    string write_build_files_dir = 4;
    // TODO add these:
	// ValidBuildFileNames []string
	// ShouldFix bool
	// IndexLibraries bool
	// KindMap map[string]MappedKind
	// Repos []*rule.Rule
	// Langs []string
	// Exts map[string]interface{}
}

message Rule {
    int32 index = 1;
	bool deleted = 2;
    bool inserted = 3;
    bool updated = 4;
    string kind = 5;
	// repeated Expr args = 6;
	// attrs   map[string]*bzl.AssignExpr
	// private map[string]interface{}
}

message GenerateResult {
    // Gen is a list of rules generated from files found in the directory
	// GenerateRules was asked to process. These will be merged with existing
	// rules or added to the build file.
	repeated Rule gen = 1;

	// Empty is a list of rules that cannot be built with the files found in the
	// directory GenerateRules was asked to process. These will be merged with
	// existing rules. If ther merged rules are empty, they will be deleted.
	//repeated Rule empty = 2;

	// Imports contains information about the imported libraries for each
	// rule in Gen. Gen and Imports must have the same length, since they
	// correspond. These values are passed to Resolve after merge. The type
	// is opaque since different languages may use different representations.
	//repeated proto.any imports = 3;
}

message GenerateArgs {
    // config is the configuration for the directory where rules are being
    // generated.
    Config config = 1;

    // dir is the canonical absolute path to the directory.
    string dir = 2;

    // rel is the slash-separated path to the directory, relative to the
    // repository root ("" for the root directory itself). This may be used
    // as the package name in labels.
    string rel = 3;

    // File is the build file for the directory. File is nil if there is
    // no existing build file.
    //File *rule.File = 4;

    // Subdirs is a list of subdirectories in the directory, including
    // symbolic links to directories that Gazelle will follow.
    // RegularFiles is a list of regular files including other symbolic
    // links.
    // GeneratedFiles is a list of generated files in the directory
    // (usually these are mentioned as "out" or "outs" attributes in rules).
    repeated string subdirs = 5;
    repeated string regularFiles = 6;
    repeated string gen_files = 7;

    // OtherEmpty is a list of empty rules generated by other languages.
    // OtherGen is a list of generated rules generated by other languages.
    //OtherEmpty, OtherGen []*rule.Rule
}

message GenerateRulesRequest {
    GenerateArgs generate_args = 1;
}

message GenerateRulesResponse {
    GenerateResult generate_result = 1;
}

message Response {
  oneof return {
      GenerateRulesResponse generate_rules = 1;
  }
}

message Request {
  oneof function {
      GenerateRulesRequest generate_rules = 1;
  }
}
